// $Id: config.w32 234945 2007-05-04 15:05:53Z mfp $
// vim:ft=javascript

ARG_ENABLE("sdo", "enable SDO support", "no");

if (PHP_SDO != "no") {
    if (PHP_LIBXML == "yes") {
    
        /* There are problems linking the Tuscany SDO library statically, so for now ... */
        if (!PHP_SDO_SHARED) {
            WARNING("Can't link SDO statically on Windows");
            PHP_SDO_SHARED = 'shared';
        }
        
        /* first build the sdo core extension ... */
        EXTENSION('sdo', 
            'sdo.cpp ' +
            'SDO_DAS_ChangeSummary.cpp ' +  
            'SDO_DAS_DataFactory.cpp ' +  
            'SDO_DAS_Setting.cpp ' +  
            'SDO_DataObject.cpp ' +  
            'SDO_List.cpp ' +  
            'SDO_Model_Type.cpp ' + 
            'SDO_Model_Property.cpp ' + 
            'SDO_Model_ReflectionDataObject.cpp ' + 
            'SDO_Sequence.cpp ' + 
            'sdo_utils.cpp ' + 
            'SDO_Exception.cpp ' + 
            'SDO_CPPException.cpp ' +
            'xmldas_utils.cpp ' +
            'SDO_DAS_XML.cpp ' +
            'SDO_DAS_XML_Document.cpp ', 
            PHP_SDO_SHARED,
            '/GX /I' + configure_module_dirname);            
            
        /* ... add local copy of the Tuscany SDO library ... */        
        ADD_SOURCES(configure_module_dirname + '\\commonj\\sdo', 
            'ChangedDataObjectListImpl.cpp ' +
            'ChangeSummary.cpp ' +
            'ChangeSummaryBuilder.cpp ' +
            'ChangeSummaryImpl.cpp ' +
            'CopyHelper.cpp ' +
            'DASProperty.cpp ' +
            'DASType.cpp ' +
            'DASValue.cpp ' +
            'DASValues.cpp ' +
            'DataFactory.cpp ' + 
            'DataFactoryImpl.cpp ' +
            'DataGraph.cpp ' +
            'DataGraphImpl.cpp ' +
            'DataObject.cpp ' +
            'DataObjectImpl.cpp ' +
            'DataObjectInstance.cpp ' +
            'DataObjectList.cpp ' +
            'DataObjectListImpl.cpp ' +
            'DataTypeInfo.cpp ' +
            'DefaultLogWriter.cpp ' +
            'EqualityHelper.cpp ' +
            'GroupDefinition.cpp ' +
            'GroupEvent.cpp ' +
            'HelperProvider.cpp ' +
            'Logger.cpp ' +
            'LogWriter.cpp ' +
            'ParserErrorSetter.cpp ' +
            'Property.cpp ' +
            'PropertyDefinition.cpp ' +
            'PropertyDefinitionImpl.cpp ' +
            'PropertyImpl.cpp ' +
            'PropertyList.cpp ' +
            'PropertySetting.cpp ' +
            'RefCountingObject.cpp ' + 
            'RefCountingPointer.cpp ' +
            'SAX2Attribute.cpp ' +
            'SAX2Attributes.cpp ' +
            'SAX2Namespaces.cpp ' +
            'SAX2Parser.cpp ' +
            'SchemaInfo.cpp ' +
            'SDOCheck.cpp ' +
            'SDODataConverter.cpp ' +
            'SDODate.cpp ' +
            'SDORuntime.cpp ' +
            'SDORuntimeException.cpp ' +
            'SDOSax2Parser.cpp ' +
            'SDOSchemaSAX2Parser.cpp ' +
            'SDOUtils.cpp ' +
            'SDOValue.cpp ' +
            'SDOXMLBufferWriter.cpp ' +
            'SDOXMLFileWriter.cpp ' +
            'SDOXMLStreamWriter.cpp ' + 
            'SDOXMLString.cpp ' +
            'SDOXMLWriter.cpp ' +
            'SDOXSDBufferWriter.cpp ' +
            'SDOXSDFileWriter.cpp ' +
            'SDOXSDStreamWriter.cpp ' +
            'SDOXSDWriter.cpp ' +
            'Sequence.cpp ' +
            'SequenceImpl.cpp ' +
            'Setting.cpp ' +
            'SettingList.cpp ' +
            'Type.cpp ' +
            'TypeDefinition.cpp ' +
            'TypeDefinitionImpl.cpp ' +
            'TypeDefinitions.cpp ' +
            'TypeDefinitionsImpl.cpp ' +
            'TypeImpl.cpp ' +
            'TypeList.cpp ' +
            'XMLDocument.cpp ' +
            'XMLDocumentImpl.cpp ' +
            'XMLHelper.cpp ' +
            'XMLHelperImpl.cpp ' +
            'XMLQName.cpp ' +
            'XpathHelper.cpp ' +
            'XSDHelper.cpp ' +
            'XSDHelperImpl.cpp ' +
            'XSDPropertyInfo.cpp ' + 
            'XSDTypeInfo.cpp ', 
            'sdo');        
            
        AC_DEFINE('HAVE_PHP_SDO', 1, "SDO support");
        
        if (!PHP_SDO_SHARED) {
            ADD_FLAG('CFLAGS_SDO', "/D LIBXML_STATIC ");
        }
        
        ADD_EXTENSION_DEP('sdo', 'libxml');
        ADD_EXTENSION_DEP('sdo', 'spl');
        ADD_EXTENSION_DEP('sdo', 'Reflection');        
    } else {
        WARNING("SDO not enabled; requires libxml extension");
    }

}